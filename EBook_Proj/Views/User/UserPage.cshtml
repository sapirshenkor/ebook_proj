@model UserPageViewModel

<div class="container">
    <h2 class="welcome-header">Welcome, @Context.Session.GetString("FirstName") @Context.Session.GetString("LastName")!</h2>

    <div class="dashboard-container">
        <!-- Books Sections (Left Side) -->
        <div class="books-sections">
            <!-- Purchased Books -->
            <div class="books-section">
                <h3 class="section-title">My Purchased Books</h3>
                <div class="books-scroll">
                    <div class="book-grid">
                        @if (Model.OrderedBooks.OwnedBooks != null && Model.OrderedBooks.OwnedBooks.Any())
                        {
                            @foreach (var book in Model.OrderedBooks.OwnedBooks)
                            {
                                <div class="book-card purchased-book">
                                    <img src="@book.BookCover" class="book-image" alt="Book Cover">
                                    <div class="book-info">
                                        <h5 class="book-title">@book.Title</h5>
                                        <p class="book-author">@book.Author</p>
                                        <div class="d-flex justify-content-between align-items-center mt-2">
                                            <div class="d-flex justify-content-between align-items-center mt-2">
                                                <div class="download-options">
                                                    <div class="dropdown">
                                                        <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="downloadDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                                            Download Book
                                                        </button>
                                                        <ul class="dropdown-menu" aria-labelledby="downloadDropdown">
                                                            <li><a class="dropdown-item" href="@Url.Action("Download", "Books", new { format = "epub" })">EPUB</a></li>
                                                            <li><a class="dropdown-item" href="@Url.Action("Download", "Books", new { format = "fb2" })">FB2</a></li>
                                                            <li><a class="dropdown-item" href="@Url.Action("Download", "Books", new { format = "mobi" })">MOBI</a></li>
                                                            <li><a class="dropdown-item" href="@Url.Action("Download", "Books", new { format = "pdf" })">PDF</a></li>
                                                        </ul>
                                                    </div>
                                                        <button type="button"
                                                                class="btn btn-danger btn-sm"
                                                                data-bs-toggle="modal"
                                                                data-bs-target="#deleteModal@(book.BookID)">
                                                            <i class="bi bi-trash"></i> Delete
                                                        </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>No purchased books found.</p>
                        }
                    </div>
                </div>
            </div>

            <!-- Borrowed Books -->
            <div class="books-section mt-4">
                <h3 class="section-title">My Borrowed Books</h3>
                <div class="books-scroll">
                    <div class="book-grid">
                        @if (Model.OrderedBooks.BorrowedBooks != null && Model.OrderedBooks.BorrowedBooks.Any())
                        {
                            @foreach (var book in Model.OrderedBooks.BorrowedBooks)
                            {
                                <div class="book-card borrowed-book">
                                    <img src="@book.BookCover" class="book-image" alt="Book Cover">
                                    <div class="book-info">
                                        <h5 class="book-title">@book.Title</h5>
                                        <p class="book-author">@book.Author</p>
                                        <div class="book-date-section p-2 rounded-3 border shadow-sm mb-2">
                                            <p class="book-date d-flex align-items-center gap-2 mb-2">
                                                <span class="badge bg-info rounded-pill d-flex align-items-center gap-1">
                                                    <i class="bi bi-calendar-plus"></i>
                                                    Borrowed on: @book.BorrowDate.ToString("dd/MM/yyyy")
                                                </span>
                                            </p>
                                            @{
                                                var returnDate = book.BorrowDate.AddDays(30);
                                                var daysLeft = (returnDate - DateTime.Now).Days;
                                                var returnStatus = daysLeft switch
                                                {
                                                    > 5 => "text-success",
                                                    > 0 => "text-warning",
                                                    _ => "text-danger"
                                                };
                                                var badgeType = daysLeft switch
                                                {
                                                    > 5 => "bg-success",
                                                    > 0 => "bg-warning",
                                                    _ => "bg-danger"
                                                };
                                            }
                                            <p class="book-date d-flex align-items-center gap-2 mb-2">
                                                <span class="badge bg-primary rounded-pill d-flex align-items-center gap-1">
                                                    <i class="bi bi-calendar-check"></i>
                                                    Return by: @returnDate.ToString("dd/MM/yyyy")
                                                </span>
                                            </p>
                                            <p class="@returnStatus d-flex align-items-center gap-2">
                                                @if (daysLeft > 0)
                                                {
                                                    <span class="badge rounded-pill @badgeType d-flex align-items-center gap-1">
                                                        <i class="bi bi-clock"></i>
                                                        @daysLeft days left to return
                                                    </span>
                                                }
                                                else if (daysLeft == 0)
                                                {
                                                    <span class="badge rounded-pill bg-warning d-flex align-items-center gap-1">
                                                        <i class="bi bi-exclamation-triangle"></i>
                                                        Due today!
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge rounded-pill bg-danger d-flex align-items-center gap-1">
                                                        <i class="bi bi-exclamation-circle"></i>
                                                        Overdue by @Math.Abs(daysLeft) days
                                                    </span>
                                                }
                                            </p>
                                        </div>
                                        <div class="d-flex justify-content-between align-items-center mt-2">
                                            <div class="download-options">
                                                <div class="dropdown">
                                                    <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="downloadDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                                        Download Book
                                                    </button>
                                                    <ul class="dropdown-menu" aria-labelledby="downloadDropdown">
                                                        <li><a class="dropdown-item" href="@Url.Action("Download", "Books", new { format = "epub" })">EPUB</a></li>
                                                        <li><a class="dropdown-item" href="@Url.Action("Download", "Books", new { format = "fb2" })">FB2</a></li>
                                                        <li><a class="dropdown-item" href="@Url.Action("Download", "Books", new { format = "mobi" })">MOBI</a></li>
                                                        <li><a class="dropdown-item" href="@Url.Action("Download", "Books", new { format = "pdf" })">PDF</a></li>
                                                    </ul>
                                                </div>
                                                <button type="button"
                                                        class="btn btn-danger btn-sm"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#deleteModal@(book.BookID)">
                                                    <i class="bi bi-trash"></i> Delete
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>No borrowed books found.</p>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- User Info Section (Right Side) -->
        <div class="user-section">
            <div class="user-info">
                <p>Email: @Context.Session.GetString("Email")</p>
            </div>
            <div class="user-info">
                <p>First Name: @Context.Session.GetString("FirstName")</p>
            </div>
            <div class="user-info">
                <p>Last Name: @Context.Session.GetString("LastName")</p>
            </div>
        </div>
    </div>
</div>

<!-- Button trigger modal -->
<button type="button" class="btn bg-white rounded-pill shadow-sm border-0"
        data-bs-toggle="modal"
        data-bs-target="#reviewSiteModal"
        style="transition: all 0.3s ease; color: #4e73df;">
    <i class="bi bi-pencil-square me-2"></i>
    Leave Feedback
</button>

<!-- Review Modal -->
<div class="modal fade" id="reviewSiteModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Site Review</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-controller="User" asp-action="SiteReview" method="post">
                <div class="modal-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    @{
                        var userId = Context.Session.GetInt32("UserID");
                        if (userId.HasValue)
                        {
                            <input type="hidden" asp-for="SiteReview.UserID" value="@userId.Value" />
                        }
                    }
                    <div class="mb-3">
                        <label asp-for="SiteReview.Rate" class="form-label">Rating</label>
                        <select asp-for="SiteReview.Rate" class="form-select">
                            <option value="">Select a rating...</option>
                            <option value="5">5 - Excellent</option>
                            <option value="4">4 - Very Good</option>
                            <option value="3">3 - Good</option>
                            <option value="2">2 - Fair</option>
                            <option value="1">1 - Poor</option>
                        </select>
                        <span asp-validation-for="SiteReview.Rate" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="SiteReview.Description" class="form-label">Description</label>
                        <textarea asp-for="SiteReview.Description" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="SiteReview.Description" class="text-danger"></span>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Submit Review</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Success Modal -->
<div class="modal fade" id="successModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">Thank You!</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center py-4">
                <i class="bi bi-check-circle text-success" style="font-size: 3rem;"></i>
                <p class="mt-3 mb-0">Your review has been submitted successfully!</p>
            </div>
        </div>
    </div>
</div>

@if (Model.OrderedBooks.OwnedBooks != null)
{
    @foreach (var book in Model.OrderedBooks.OwnedBooks)
    {
        <div class="modal fade" id="deleteModal@(book.BookID)" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirm Deletion</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete "@book.Title" from your library?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <form asp-action="DeleteBook" asp-controller="User" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@book.BookID" />
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
}

@if (Model.OrderedBooks.BorrowedBooks != null)
{
    @foreach (var book in Model.OrderedBooks.BorrowedBooks)
    {
        <div class="modal fade" id="deleteModal@(book.BookID)" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirm Deletion</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete "@book.Title" from your library?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <form asp-action="DeleteBook" asp-controller="User" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@book.BookID" />
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
}

<!-- Success Modal -->
@if (TempData["DeleteSuccess"] != null)
{
    <div class="modal fade" id="deleteSuccessModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title">Success!</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body text-center py-4">
                    <i class="bi bi-check-circle text-success" style="font-size: 3rem;"></i>
                    <p class="mt-3 mb-0">The book has been successfully deleted from your library.</p>
                </div>
            </div>
        </div>
    </div>

    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var successModal = new bootstrap.Modal(document.getElementById('deleteSuccessModal'));
            successModal.show();
        });
    </script>
}

